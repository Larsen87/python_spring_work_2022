# todo: Дан массив размера N. Найти индексы двух ближайших чисел из этого массива.

# Пример:
# mass = [1,2,17,16,30,51,2,70,3,2]

# Для числа 2 индексы двух ближайших чисел: 6 и 9

# Пример:
# mass = [1,2,17,54,30,89,2,1,6,2]
# Для числа 1 индексы двух ближайших чисел: 0 и 7
# Для числа 2 индексы двух ближайших чисел: 6 и 9

mass = []
n = int(input("Введите длину массива:"))  # Задаем длину списка
count = []  # для записи повторяющихся чисел
c = 1

while True:  # Цикл для наполнения списка элементами
    mass.append(int(input("Введите целочисленное: ")))
    print("Осталось ввести ещё", n - c, "чисел.")
    c += 1
    if c == n + 1:
        break
for i in mass:  # определяем повторы чисел в массиве
    if mass.count(i) > 1 and i not in count:
        # проверяю, чтобы число входило в список больше 1 раза и ранее не было в списке count

        count.append(i) # добавил в список повторяющиеся числа
        quanity_count = mass.count(i) # записал в переменную количество вхождений в список для числа i
        index_start = mass.index(i) # в список index_start добавляю индексы для числа i
        index_main = [index_start]  # копирую список index_start, чтобы main пополнять, а start обновлять до end
        while quanity_count > 1:  # пока число вхождения больше 1(i = quantity_count), цикл работает
            index_end = mass.index(i, index_start + 1, len(mass))
            # для числа i в диапозоне от start == index_main +1 до end == длине массива, определяю индекс.
            # То есть смотрю индекс для повторных вхождений числа в список и записываю его.
            index_main.append(index_end)  # добавляю индекс повторных вхождений
            index_start = index_end  # присваиваю index_start - index_end,
            # для поиска следующих индексов повторных вхождений
            quanity_count = quanity_count - 1  # уменьшил счётчик повторных вхождений по числу

        differ_results = []
        differ_indexes_results = []

        for x in range(len(index_main) - 1):  # -1 потому что индексация идет от 0, а лен определяет длину от 1
            differ = index_main[x + 1] - index_main[x] # разница индексов для числа x
            differ_indexes_results.append([index_main[x], index_main[x+1], differ])
            # записал в список первый и второй индексы вхождения по числу и их разницу
            differ_results.append(differ) # скидываю разницу индексов для числа х в список
        differ_results.sort() # сортирую индексы для числа х от минимального
        for y in differ_indexes_results: # в этом списке 0 - индекс первый, 1 - индекс второй, 2 - разница индексов
            if y[2] == differ_results[0]: # если разница индексов для числа y в итерируемом списке == разнице инд
                print("Для числа", i, "индексы двух ближайших вхождений: ",y[0],":",y[1])

